// <auto-generated />
using System;
using Dev_Email_Management.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dev_Email_Management.Infrastructure.Migrations
{
    [DbContext(typeof(Dev_Email_ManagementContext))]
    partial class Dev_Email_ManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("BusinessNNI")
                        .HasColumnType("bit");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CanceledAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("BusinessId");

                    b.ToTable("Business", (string)null);
                });

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.BusinessCity", b =>
                {
                    b.Property<int>("BusinessCityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessCityId"), 1L, 1);

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BusinessCityId");

                    b.HasIndex("BusinessId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.BusinessEmail", b =>
                {
                    b.Property<int>("BusinessEmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessEmailId"), 1L, 1);

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BusinessEmailId");

                    b.HasIndex("BusinessId");

                    b.ToTable("Email", (string)null);
                });

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.BusinessPhone", b =>
                {
                    b.Property<int>("BusinessPhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessPhoneId"), 1L, 1);

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BusinessPhoneId");

                    b.HasIndex("BusinessId");

                    b.ToTable("Phone", (string)null);
                });

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.BusinessState", b =>
                {
                    b.Property<int>("BusinessStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessStateId"), 1L, 1);

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BusinessStateId");

                    b.HasIndex("BusinessId");

                    b.ToTable("State", (string)null);
                });

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.BusinessCity", b =>
                {
                    b.HasOne("Dev_Email_Management.Domain.Entities.Business", null)
                        .WithMany("Cities")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.BusinessEmail", b =>
                {
                    b.HasOne("Dev_Email_Management.Domain.Entities.Business", null)
                        .WithMany("Emails")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.BusinessPhone", b =>
                {
                    b.HasOne("Dev_Email_Management.Domain.Entities.Business", null)
                        .WithMany("Phones")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.BusinessState", b =>
                {
                    b.HasOne("Dev_Email_Management.Domain.Entities.Business", null)
                        .WithMany("States")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dev_Email_Management.Domain.Entities.Business", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Emails");

                    b.Navigation("Phones");

                    b.Navigation("States");
                });
#pragma warning restore 612, 618
        }
    }
}
